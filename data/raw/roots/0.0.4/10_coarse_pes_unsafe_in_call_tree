{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"linear\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_roots_linear\"), disambiguator: 0 }]","has_unsafe":true,"name":"analytical::linear::find_roots_linear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"quadratic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_roots_quadratic\"), disambiguator: 0 }]","has_unsafe":true,"name":"analytical::quadratic::find_roots_quadratic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cubic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_roots_cubic\"), disambiguator: 0 }]","has_unsafe":true,"name":"analytical::cubic::find_roots_cubic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cubic_depressed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_roots_cubic_depressed\"), disambiguator: 0 }]","has_unsafe":true,"name":"analytical::cubic_depressed::find_roots_cubic_depressed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cubic_normalized\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_roots_cubic_normalized\"), disambiguator: 0 }]","has_unsafe":true,"name":"analytical::cubic_normalized::find_roots_cubic_normalized"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"biquadratic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_roots_biquadratic\"), disambiguator: 0 }]","has_unsafe":true,"name":"analytical::biquadratic::find_roots_biquadratic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"quartic_depressed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_roots_quartic_depressed\"), disambiguator: 0 }]","has_unsafe":true,"name":"analytical::quartic_depressed::find_roots_quartic_depressed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"quartic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_roots_quartic\"), disambiguator: 0 }]","has_unsafe":true,"name":"analytical::quartic::find_roots_quartic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"roots\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<analytical::roots::Roots<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"roots\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<analytical::roots::Roots<F> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"roots\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<analytical::roots::Roots<F> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"roots\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<analytical::roots::Roots<F> as std::convert::AsRef<[F]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"roots\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"check_new_root\"), disambiguator: 0 }]","has_unsafe":true,"name":"<analytical::roots::Roots<F>>::check_new_root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"analytical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"roots\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_new_root\"), disambiguator: 0 }]","has_unsafe":true,"name":"<analytical::roots::Roots<F>>::add_new_root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<numerical::SearchError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<numerical::SearchError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_root_found\"), disambiguator: 0 }]","has_unsafe":true,"name":"<F as numerical::Convergency<F>>::is_root_found"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_converged\"), disambiguator: 0 }]","has_unsafe":true,"name":"<F as numerical::Convergency<F>>::is_converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_iteration_limit_reached\"), disambiguator: 0 }]","has_unsafe":false,"name":"<F as numerical::Convergency<F>>::is_iteration_limit_reached"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"newton_raphson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_root_newton_raphson\"), disambiguator: 0 }]","has_unsafe":true,"name":"numerical::newton_raphson::find_root_newton_raphson"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"brent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"arrange\"), disambiguator: 0 }]","has_unsafe":true,"name":"numerical::brent::arrange"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"brent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_root_brent\"), disambiguator: 0 }]","has_unsafe":true,"name":"numerical::brent::find_root_brent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"secant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_root_secant\"), disambiguator: 0 }]","has_unsafe":true,"name":"numerical::secant::find_root_secant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"regula_falsi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<numerical::regula_falsi::Edge as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"regula_falsi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<numerical::regula_falsi::Edge as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"regula_falsi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_root_regula_falsi\"), disambiguator: 0 }]","has_unsafe":true,"name":"numerical::regula_falsi::find_root_regula_falsi"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"simple_convergency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_root_found\"), disambiguator: 0 }]","has_unsafe":true,"name":"<numerical::simple_convergency::SimpleConvergency<F> as numerical::Convergency<F>>::is_root_found"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"simple_convergency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_converged\"), disambiguator: 0 }]","has_unsafe":true,"name":"<numerical::simple_convergency::SimpleConvergency<F> as numerical::Convergency<F>>::is_converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"simple_convergency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_iteration_limit_reached\"), disambiguator: 0 }]","has_unsafe":false,"name":"<numerical::simple_convergency::SimpleConvergency<F> as numerical::Convergency<F>>::is_iteration_limit_reached"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"debug_convergency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<numerical::debug_convergency::DebugConvergency<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"debug_convergency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","has_unsafe":false,"name":"<numerical::debug_convergency::DebugConvergency<F>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"debug_convergency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_iter_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<numerical::debug_convergency::DebugConvergency<F>>::get_iter_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"debug_convergency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_root_found\"), disambiguator: 0 }]","has_unsafe":true,"name":"<numerical::debug_convergency::DebugConvergency<F> as numerical::Convergency<F>>::is_root_found"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"debug_convergency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_converged\"), disambiguator: 0 }]","has_unsafe":true,"name":"<numerical::debug_convergency::DebugConvergency<F> as numerical::Convergency<F>>::is_converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numerical\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"debug_convergency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_iteration_limit_reached\"), disambiguator: 0 }]","has_unsafe":false,"name":"<numerical::debug_convergency::DebugConvergency<F> as numerical::Convergency<F>>::is_iteration_limit_reached"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"FloatType\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"five\"), disambiguator: 0 }]","has_unsafe":true,"name":"float::FloatType::five"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"FloatType\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"nine\"), disambiguator: 0 }]","has_unsafe":true,"name":"float::FloatType::nine"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"FloatType\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"twenty_seven\"), disambiguator: 0 }]","has_unsafe":true,"name":"float::FloatType::twenty_seven"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"FloatType\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cbrt\"), disambiguator: 0 }]","has_unsafe":true,"name":"float::FloatType::cbrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"one_third\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::one_third"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"two\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::two"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"three\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::three"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"four\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::four"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"two_third_pi\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::two_third_pi"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pi\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::pi"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::acos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::cos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"powf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as float::FloatType>::powf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"one_third\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::one_third"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"two\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::two"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"three\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::three"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"four\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::four"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"two_third_pi\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::two_third_pi"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pi\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::pi"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"acos\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::acos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cos\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::cos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"powf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as float::FloatType>::powf"}
