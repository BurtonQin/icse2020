{"def_path":"[DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::iterator::SieveIterator::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iterator::SieveIterator<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segsieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"small_primes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"primesieve::segsieve::small_primes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segsieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"segmented_sieve\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"primesieve::segsieve::segmented_sieve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index_for\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::segment::index_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::segment::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_off\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::segment::set_off"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_on\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::segment::set_on"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"primefuncs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trial_division\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::sieve::primefuncs::<impl sieve::Sieve>::trial_division"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"primefuncs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_prime\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::sieve::primefuncs::<impl sieve::Sieve>::is_prime"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"primefuncs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"factorise\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::sieve::primefuncs::<impl sieve::Sieve>::factorise"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"primefuncs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"euler_phi\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::sieve::primefuncs::<impl sieve::Sieve>::euler_phi"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"primefuncs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"number_of_divisors\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::sieve::primefuncs::<impl sieve::Sieve>::number_of_divisors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"upper_bound\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::sieve::upper_bound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_limit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"primesieve::sieve::Sieve::to_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_n_primes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"primesieve::sieve::Sieve::to_n_primes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"limit\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::sieve::Sieve::limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"num_primes\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::sieve::Sieve::num_primes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"nth_prime\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::sieve::Sieve::nth_prime"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::sieve::Sieve::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sieve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sieve::SieveIterator<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::wheel::Wheel30::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"primesieve::wheel::Wheel30::next_diff"}
