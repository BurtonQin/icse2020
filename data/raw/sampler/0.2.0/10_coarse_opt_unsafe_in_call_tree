{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::Range<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::Range<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::Range<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::Range<A> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::Range<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"data\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::Arc<A> as audio::Audio>::data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"data\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::Range<A> as audio::Audio>::data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::wav::Audio<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::wav::Audio<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::wav::Audio<F> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::wav::Audio<F> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::wav::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"data\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::wav::Audio<F> as audio::Audio>::data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_file\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<audio::wav::Audio<F>>::from_file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fill_samples\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::wav::Audio<F>>::from_file::fill_samples"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::wav::Error as std::convert::From<hound::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::wav::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"audio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<audio::wav::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dynamic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dynamic\"), disambiguator: 0 }]","fn_type":"Safe","name":"sampler::dynamic::<impl sampler::Sampler<instrument::mode::Dynamic, instrument::note_freq::DynamicGenerator, A>>::dynamic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dynamic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dynamic_legato\"), disambiguator: 0 }]","fn_type":"Safe","name":"sampler::dynamic::<impl sampler::Sampler<instrument::mode::Dynamic, instrument::note_freq::DynamicGenerator, A>>::dynamic_legato"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dynamic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dynamic_retrigger\"), disambiguator: 0 }]","fn_type":"Safe","name":"sampler::dynamic::<impl sampler::Sampler<instrument::mode::Dynamic, instrument::note_freq::DynamicGenerator, A>>::dynamic_retrigger"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dynamic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dynamic_poly\"), disambiguator: 0 }]","fn_type":"Safe","name":"sampler::dynamic::<impl sampler::Sampler<instrument::mode::Dynamic, instrument::note_freq::DynamicGenerator, A>>::dynamic_poly"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Map<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Map<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Map<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Map<A> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Sample<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Sample<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Sample<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Sample<A> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::StepVelRange as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::StepVelRange as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::StepVelRange as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::StepVelRange as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::StepVelRange as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::StepVelRange as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::StepVelRange as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::StepVelRange as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::StepVelRange as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::SampleOverRange<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::SampleOverRange<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::SampleOverRange<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::SampleOverRange<A> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_over\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<i16>>::is_over"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_over\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Range<f32>>::is_over"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Sample<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"map_audio\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Sample<A>>::map_audio"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Map<A>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_sequential_steps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Map<A>>::from_sequential_steps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_single_sample\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Map<A>>::from_single_sample"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Map<A>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sample\"), disambiguator: 0 }]","fn_type":"Safe","name":"<map::Map<A>>::sample"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_wav_file\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"sampler::map::wav::<impl map::Sample<std::sync::Arc<audio::wav::Audio<F>>>>::from_wav_file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wav\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_base_letter_octave\"), disambiguator: 0 }]","fn_type":"Safe","name":"sampler::map::wav::read_base_letter_octave"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"play_sample\"), disambiguator: 0 }]","fn_type":"Safe","name":"sampler::mode::play_sample"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"play_sample_from_playhead_idx\"), disambiguator: 0 }]","fn_type":"Safe","name":"sampler::mode::play_sample_from_playhead_idx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"note_on\"), disambiguator: 0 }]","fn_type":"Safe","name":"<instrument::mode::Mono as mode::Mode>::note_on"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"note_off\"), disambiguator: 0 }]","fn_type":"Safe","name":"<instrument::mode::Mono as mode::Mode>::note_off"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"note_on\"), disambiguator: 0 }]","fn_type":"Safe","name":"<instrument::mode::Poly as mode::Mode>::note_on"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"note_off\"), disambiguator: 0 }]","fn_type":"Safe","name":"<instrument::mode::Poly as mode::Mode>::note_off"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"note_on\"), disambiguator: 0 }]","fn_type":"Safe","name":"<instrument::mode::Dynamic as mode::Mode>::note_on"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"note_off\"), disambiguator: 0 }]","fn_type":"Safe","name":"<instrument::mode::Dynamic as mode::Mode>::note_off"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Voices<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::PlayingSample<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Playhead<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Voices<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"legato\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<instrument::mode::Mono, NFG, A>>::legato"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"retrigger\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<instrument::mode::Mono, NFG, A>>::retrigger"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poly\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<instrument::mode::Poly, NFG, A>>::poly"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"map_instrument\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::map_instrument"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"num_voices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::num_voices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"voice_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::voice_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"detune\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::detune"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"attack\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::attack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"release\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::release"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"set_num_voices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::set_num_voices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"note_on\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::note_on"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"note_off\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::note_off"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"stop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::stop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"frames\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::frames"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_active\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::is_active"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fill_slice\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Sampler<M, NFG, A>>::fill_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::PlayingSample<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_playhead_idx\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::PlayingSample<A>>::from_playhead_idx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Playhead<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_idx\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Playhead<A>>::from_idx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Playhead<A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"next_frame\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Frames<'a, A, NF>>::next_frame"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sampler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sampler::Frames<'a, A, NF> as std::iter::Iterator>::next"}
