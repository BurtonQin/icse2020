{"def_path":"[DisambiguatedDefPathData { data: Module(\"recursive_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recursive_disassembler::Disassembly as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recursive_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recursive_disassembler::Disassembly as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recursive_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recursive_disassembler::Disassembly as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recursive_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recursive_disassembler::Disassembly as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recursive_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recursive_disassembler::RecursiveDisassembler<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recursive_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_root\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recursive_disassembler::RecursiveDisassembler<T>>::add_root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recursive_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"disassemble\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<recursive_disassembler::RecursiveDisassembler<T>>::disassemble"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recursive_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"in_range\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recursive_disassembler::RecursiveDisassembler<T>>::in_range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recursive_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_disassembly\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recursive_disassembler::RecursiveDisassembler<T>>::into_disassembly"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"recursive_disassembler::bb_disassembler::BBDisasmCapstoneX86::new_32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"recursive_disassembler::bb_disassembler::BBDisasmCapstoneX86::new_64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_basic_block\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bb_disassembler::BBDisasmCapstoneX86 as bb_disassembler::BBDisassembler>::get_basic_block"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_direct\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"recursive_disassembler::bb_disassembler::is_direct"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_direct\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bb_disassembler::is_direct::DIRECT_RE as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_direct\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bb_disassembler::is_direct::DIRECT_RE as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_direct\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bb_disassembler::is_direct::DIRECT_RE as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_call\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"recursive_disassembler::bb_disassembler::from_call"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_jmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"recursive_disassembler::bb_disassembler::from_jmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_cjmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"recursive_disassembler::bb_disassembler::from_cjmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_ret\"), disambiguator: 0 }]","fn_type":"Safe","name":"recursive_disassembler::bb_disassembler::from_ret"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_terminator\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"recursive_disassembler::bb_disassembler::is_terminator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bb_disassembler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_range\"), disambiguator: 0 }]","fn_type":"Safe","name":"recursive_disassembler::bb_disassembler::get_range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"basic_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<basic_block::BasicBlock as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"basic_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<basic_block::BasicBlock as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"basic_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<basic_block::BasicBlock as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"basic_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<basic_block::BasicBlock as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"basic_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"recursive_disassembler::basic_block::BasicBlock::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"basic_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"successors\"), disambiguator: 0 }]","fn_type":"Safe","name":"recursive_disassembler::basic_block::BasicBlock::successors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"terminator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<terminator::Terminator as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"terminator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<terminator::Terminator as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"terminator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<terminator::Terminator as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"terminator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<terminator::Terminator as std::cmp::PartialEq>::ne"}
