{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rect::Rect as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rect::Rect as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rect::Rect as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rect::Rect as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rect::Rect as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rect::Rect as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::rect::Rect::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"top\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::rect::Rect::top"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bottom\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::rect::Rect::bottom"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"left\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::rect::Rect::left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"right\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::rect::Rect::right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"area\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::rect::Rect::area"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"intersects\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::rect::Rect::intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::rect::Rect::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains_point\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::rect::Rect::contains_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<packer::packer::Skyline as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"right\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::packer::Skyline::right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<packer::packer::DensePacker as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::packer::DensePacker::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::packer::DensePacker::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"resize\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::packer::DensePacker::resize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pack\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::packer::DensePacker::pack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"can_pack\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::packer::DensePacker::can_pack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"can_put\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::packer::DensePacker::can_put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"find_skyline\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::packer::DensePacker::find_skyline"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::packer::DensePacker::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"merge\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::packer::DensePacker::merge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<packer::Packer as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::Packer::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"config\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::Packer::config"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pack\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::Packer::pack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"can_pack\"), disambiguator: 0 }]","fn_type":"Safe","name":"rect_packer::packer::Packer::can_pack"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Config as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Config as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Config as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Config as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Config as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Config as std::hash::Hash>::hash"}
