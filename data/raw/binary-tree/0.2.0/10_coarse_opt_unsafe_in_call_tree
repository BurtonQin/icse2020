{"def_path":"[DisambiguatedDefPathData { data: Module(\"cow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cow::RcCow<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cow::RcCow<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cow::RcCow<T> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cow::RcCow<T> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cow::ArcCow<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cow::ArcCow<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cow::ArcCow<T> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cow::ArcCow<T> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_must\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::root_must"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<count::CountTree<T>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_front\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::push_front"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::push_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop_front\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::pop_front"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T>>::pop_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T> as BinaryTree>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_power\"), disambiguator: 0 }]","has_unsafe":false,"name":"count::is_power"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_floor_log\"), disambiguator: 0 }]","has_unsafe":false,"name":"count::exp_floor_log"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a count::CountTree<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<count::Iter<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::Iter<'a, T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountTree<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<count::IntoIter<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::IntoIter<T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"lcount\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T>>::lcount"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"rcount\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T>>::rcount"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"balance_factor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T>>::balance_factor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"rebalance\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T>>::rebalance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"update_stats\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T>>::update_stats"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"into_value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T>>::into_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"left\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as Node>::left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"right\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as Node>::right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as Node>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"detach_left\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as NodeMut>::detach_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"detach_right\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as NodeMut>::detach_right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"insert_left\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as NodeMut>::insert_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"insert_right\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as NodeMut>::insert_right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"value_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as NodeMut>::value_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"into_parts\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as NodeMut>::into_parts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"left_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as NodeMut>::left_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"right_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as NodeMut>::right_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::DebugPrefix<'a, 'b, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"count\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<count::CountNode<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<iter::IterAction as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::Iter<'a, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<iter::Iter<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::IntoIter<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<iter::IntoIter<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::IntoIter<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::Level as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::Level as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<test::Level as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<test::Level as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::Level as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_balanced\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::Level::is_balanced"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_u32\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::Level::as_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compute_level\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::compute_level"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"left\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as Node>::left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"right\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as Node>::right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as Node>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"detach_left\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as NodeMut>::detach_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"detach_right\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as NodeMut>::detach_right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"insert_left\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as NodeMut>::insert_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"insert_right\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as NodeMut>::insert_right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"value_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as NodeMut>::value_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_parts\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as NodeMut>::into_parts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"left_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as NodeMut>::left_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"right_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestNode<T> as NodeMut>::right_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unbox\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unbox\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::boxed::Box<T> as unbox::Unbox>::unbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unbox\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"unbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::rc::Rc<T> as unbox::Unbox>::unbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unbox\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::sync::Arc<T> as unbox::Unbox>::unbox"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"walk\"), disambiguator: 0 }]","has_unsafe":false,"name":"Node::walk"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"NodeMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rotate_left\"), disambiguator: 0 }]","has_unsafe":false,"name":"NodeMut::rotate_left"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"NodeMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rotate_right\"), disambiguator: 0 }]","has_unsafe":false,"name":"NodeMut::rotate_right"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"NodeMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"walk_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"NodeMut::walk_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"NodeMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"walk_reshape\"), disambiguator: 0 }]","has_unsafe":false,"name":"NodeMut::walk_reshape"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"NodeMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert_before\"), disambiguator: 0 }]","has_unsafe":false,"name":"NodeMut::insert_before"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"NodeMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"walk_extract\"), disambiguator: 0 }]","has_unsafe":false,"name":"NodeMut::walk_extract"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"NodeMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"NodeMut::try_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<WalkAction as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<WalkAction as std::cmp::PartialEq>::eq"}
