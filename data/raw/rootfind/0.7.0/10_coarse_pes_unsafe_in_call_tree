{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bracket::Bounds as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bracket::Bounds as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bracket::Bounds as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bracket::Bounds as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rootfind::bracket::Bounds::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"middle\"), disambiguator: 0 }]","fn_type":"Safe","name":"rootfind::bracket::Bounds::middle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"rootfind::bracket::Bounds::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","fn_type":"Safe","name":"rootfind::bracket::Bounds::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bracket::BracketGenerator<'a, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bracket::BracketGenerator<'a, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_sign_change\"), disambiguator: 0 }]","fn_type":"Safe","name":"rootfind::bracket::is_sign_change"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bracket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"first_bracket\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rootfind::bracket::first_bracket"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convergence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rootfind::convergence::DeltaX::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convergence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_converged\"), disambiguator: 0 }]","fn_type":"Safe","name":"<convergence::DeltaX as convergence::IsConverged>::is_converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convergence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rootfind::convergence::FnResidual::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convergence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_converged\"), disambiguator: 0 }]","fn_type":"Safe","name":"<convergence::FnResidual as convergence::IsConverged>::is_converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convergence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<convergence::DualCriteria<'a, C1, C2>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convergence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_converged\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<convergence::DualCriteria<'a, C1, C2> as convergence::IsConverged>::is_converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<solver::RootError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iterative_root_find\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rootfind::solver::iterative_root_find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"newton_raphson\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rootfind::solver::newton_raphson"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"nr_step\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rootfind::solver::nr_step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"halley_method\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rootfind::solver::halley_method"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"halley_step\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rootfind::solver::halley_step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bisection\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rootfind::solver::bisection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"false_position_illinios\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rootfind::solver::false_position_illinios"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wrap::RealFn<'a, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eval_f\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wrap::RealFn<'a, F> as wrap::RealFnEval>::eval_f"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wrap::RealFnAndFirst<'a, F1, F2>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eval_f\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wrap::RealFnAndFirst<'a, F1, F2> as wrap::RealFnEval>::eval_f"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eval_df\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wrap::RealFnAndFirst<'a, F1, F2> as wrap::RealDfEval>::eval_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wrap::RealFnAndFirstSecond<'a, F1, F2, F3>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eval_f\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wrap::RealFnAndFirstSecond<'a, F1, F2, F3> as wrap::RealFnEval>::eval_f"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eval_df\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wrap::RealFnAndFirstSecond<'a, F1, F2, F3> as wrap::RealDfEval>::eval_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eval_d2f\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wrap::RealFnAndFirstSecond<'a, F1, F2, F3> as wrap::RealD2fEval>::eval_d2f"}
