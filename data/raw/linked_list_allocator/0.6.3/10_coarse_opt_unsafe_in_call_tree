{"def_path":"[DisambiguatedDefPathData { data: Module(\"hole\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::hole::HoleList::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hole\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"allocate_first_fit\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::hole::HoleList::allocate_first_fit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hole\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min_size\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::hole::HoleList::min_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hole\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"info\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::hole::Hole::info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hole\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hole::HoleInfo as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hole\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hole::HoleInfo as core::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hole\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_hole\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::hole::split_hole"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hole\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"allocate_first_fit\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::hole::allocate_first_fit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hole\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deallocate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"linked_list_allocator::hole::deallocate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hole\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"move_helper\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::hole::move_helper"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::Heap::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"allocate_first_fit\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::Heap::allocate_first_fit"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bottom\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::Heap::bottom"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::Heap::size"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"top\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::Heap::top"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::LockedHeap::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LockedHeap as core::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"align_down\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::align_down"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"align_up\"), disambiguator: 0 }]","fn_type":"Safe","name":"linked_list_allocator::align_up"}
