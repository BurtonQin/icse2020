{"def_path":"[DisambiguatedDefPathData { data: Module(\"func\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parse::Token as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parse::Token as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parse::ParenToken as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parse::ParenToken as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_num\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::parse::next_num"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_paren\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::parse::next_paren"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_in_op\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::parse::next_in_op"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_pre_op\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::parse::next_pre_op"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_post_op\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::parse::next_post_op"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_name\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::parse::next_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_comma\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::parse::next_comma"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_parse_order\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::parse::get_parse_order"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_token\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::parse::next_token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_tokens\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::parse::to_tokens"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_paren_tokens\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::parse::to_paren_tokens"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_paren_tokens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recurse\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::parse::to_paren_tokens::recurse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_tokens\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::parse::get_tokens"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::Op as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::Op as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<op::Op as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<op::Op as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::In as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::In as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<op::In as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::Pre as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::Pre as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<op::Pre as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::Post as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::Post as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<op::Post as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"precedence\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::op::Op::precedence"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_left_associative\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::op::Op::is_left_associative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::op::Op::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"should_shunt\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::op::Op::should_shunt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::Op as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::Paren as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::Paren as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<op::Paren as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::op::Paren::to_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<op::Paren as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"expr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<expr::Expression<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"expr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<expr::Expression<N>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"expr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_ctx\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<expr::Expression<N>>::parse_ctx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"expr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<expr::Expression<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"expr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_ctx\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<expr::Expression<N>>::eval_ctx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"expr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<expr::Expression<N> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<term::Term<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<term::Term<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<term::Expr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<term::Expr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<term::Term<N>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_ctx\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<term::Term<N>>::parse_ctx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<term::Term<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_ctx\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<term::Term<N>>::eval_ctx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<term::Term<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<term::Term<N> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<term::Term<N> as std::convert::From<expr::Expression<N>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<term::Term<N> as std::convert::From<N>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<term::Term<N> as std::convert::From<answer::Answer<N>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"paren_to_exprs\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::term::paren_to_exprs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tokens_to_args\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::term::tokens_to_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert_operators\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::term::insert_operators"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tokenexprs_to_postfix\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::term::tokenexprs_to_postfix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tokenexprs_to_postfix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recurse\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::term::tokenexprs_to_postfix::recurse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"postfix_to_term\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::term::postfix_to_term"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"term\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_operand\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::term::Expr::is_operand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Add<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Add<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Add<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Add<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Sub<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Sub<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Sub<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Sub<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Mul<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Mul<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Mul<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Mul<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Div<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Div<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Div<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Div<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Pow<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Pow<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Pow<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Pow<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::PlusMinus<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::PlusMinus<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::PlusMinus<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::PlusMinus<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Neg<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Neg<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Neg<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Neg<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Pos<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Pos<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Pos<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Pos<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::PosNeg<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::PosNeg<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::PosNeg<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::PosNeg<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Fact<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Fact<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Fact<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Fact<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Percent<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Percent<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opers::Percent<N> as opers::Operate<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opers::Percent<N> as opers::Operate<N>>::to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::ParseError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_ParseError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_Fail_FOR_ParseError::<impl failure::Fail for errors::ParseError>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_ParseError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_Fail_FOR_ParseError::<impl failure::Fail for errors::ParseError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_ParseError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_core_fmt_Display_FOR_ParseError::<impl std::fmt::Display for errors::ParseError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::MathError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_MathError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_Fail_FOR_MathError::<impl failure::Fail for errors::MathError>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_MathError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_Fail_FOR_MathError::<impl failure::Fail for errors::MathError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_MathError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_core_fmt_Display_FOR_MathError::<impl std::fmt::Display for errors::MathError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::EvalError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_EvalError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_Fail_FOR_EvalError::<impl failure::Fail for errors::EvalError>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_EvalError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_Fail_FOR_EvalError::<impl failure::Fail for errors::EvalError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_EvalError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_core_fmt_Display_FOR_EvalError::<impl std::fmt::Display for errors::EvalError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::EvalError as std::convert::From<errors::ParseError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::EvalError as std::convert::From<errors::MathError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Expected as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_Expected\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_Fail_FOR_Expected::<impl failure::Fail for errors::Expected>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_Expected\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_Fail_FOR_Expected::<impl failure::Fail for errors::Expected>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_Expected\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::errors::_DERIVE_failure_core_fmt_Display_FOR_Expected::<impl std::fmt::Display for errors::Expected>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<context::Context<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<context::Config as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<context::Config as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::Context<N>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_var\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::Context<N>>::set_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_func\"), disambiguator: 0 }]","fn_type":"Safe","name":"<context::Context<N>>::set_func"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<context::Context<N>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::context::Config::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<context::Config as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::Context<N> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<context::Context<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Sin as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Cos as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Max as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Min as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Sqrt as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Nrt as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Abs as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Tan as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Asin as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Acos as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Atan as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Atan2 as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Floor as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Ceil as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Round as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"funcs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<context::funcs::Log as func::Func<N>>::eval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexrugrat::ComplexRugRat as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as num::Num>::from_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64_complex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as num::Num>::from_f64_complex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"typename\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexrugrat::ComplexRugRat as num::Num>::typename"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tryord\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as num::Num>::tryord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as num::Num>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as num::Num>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as num::Num>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as num::Num>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"conjugate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::complexrugrat::ComplexRugRat::conjugate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexrugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<num::complexrugrat::ComplexRugRat as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugrat::<impl num::Num for rug::Rational>::from_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64_complex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugrat::<impl num::Num for rug::Rational>::from_f64_complex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"typename\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::rugrat::<impl num::Num for rug::Rational>::typename"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tryord\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugrat::<impl num::Num for rug::Rational>::tryord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugrat::<impl num::Num for rug::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugrat::<impl num::Num for rug::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugrat::<impl num::Num for rug::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugrat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugrat::<impl num::Num for rug::Rational>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::from_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64_complex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::from_f64_complex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"typename\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::typename"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tryord\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::tryord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::sin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::cos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::tan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::asin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::acos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::atan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rugcomplex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::rugcomplex::<impl num::Num for rug::Complex>::log"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as num::Num>::from_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64_complex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as num::Num>::from_f64_complex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"typename\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as num::Num>::typename"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tryord\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as num::Num>::tryord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as num::Num>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as num::Num>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as num::Num>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as num::Num>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"conjugate\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::complexfloat::ComplexFloat::conjugate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as std::convert::From<(f64, f64)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complexfloat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<num::complexfloat::ComplexFloat as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::from_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64_complex\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::from_f64_complex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"typename\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::typename"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tryord\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::tryord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::sin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::cos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::tan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::asin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::acos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::atan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan2\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::atan2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"float64\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log\"), disambiguator: 0 }]","fn_type":"Safe","name":"mexprp::num::float64::<impl num::Num for f64>::log"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tryord\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::tryord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"nrt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::nrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::sin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::cos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::tan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::asin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::acos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::atan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan2\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::atan2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::num::Num::log"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<answer::Answer<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<answer::Answer<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<answer::Answer<N> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<answer::Answer<N> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"op\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<answer::Answer<N>>::op"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_answers\"), disambiguator: 0 }]","fn_type":"Safe","name":"<answer::Answer<N>>::op::push_answers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<answer::Answer<N>>::unop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_answers\"), disambiguator: 0 }]","fn_type":"Safe","name":"<answer::Answer<N>>::unop::push_answers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_single\"), disambiguator: 0 }]","fn_type":"Safe","name":"<answer::Answer<N>>::unwrap_single"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_vec\"), disambiguator: 0 }]","fn_type":"Safe","name":"<answer::Answer<N>>::to_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"join\"), disambiguator: 0 }]","fn_type":"Safe","name":"<answer::Answer<N>>::join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"answer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<answer::Answer<N> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"eval\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::eval"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"eval_ctx\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mexprp::eval_ctx"}
