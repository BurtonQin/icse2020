{"def_path":"[DisambiguatedDefPathData { data: Module(\"scoped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take_or_recover\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"take_mut::scoped::Scope::take_or_recover"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scoped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"take_mut::scoped::Scope::take"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scoped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"panic\"), disambiguator: 0 }]","fn_type":"Safe","name":"take_mut::scoped::Scope::take::panic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scoped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scope\"), disambiguator: 0 }]","fn_type":"Safe","name":"take_mut::scoped::scope"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scoped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fill\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<scoped::Hole<'c, 'm, T, F>>::fill"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scoped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<scoped::Hole<'c, 'm, T, F> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"take_mut::take"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"take_or_recover\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"take_mut::take_or_recover"}
