{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TrieKey\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::keys::TrieKey::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TrieKey\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::keys::TrieKey::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<keys::KeyMatch as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"match_keys\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::keys::match_keys"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check_keys\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::keys::check_keys"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::vec::Vec<u8> as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<[u8] as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::string::String as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<str as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a T as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a mut T as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::path::PathBuf as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::path::Path as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<endian_type::LittleEndian<T> as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<endian_type::BigEndian<T> as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u16 as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u32 as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u64 as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i16 as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i32 as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i64 as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<usize as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"encode_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<isize as keys::TrieKey>::encode_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Iter<'a, K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Keys<'a, K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"first\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Keys<'a, K, V>>::new::first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Keys<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Values<'a, K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"second\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Values<'a, K, V>>::new::second"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Values<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Children<'a, K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Children<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"child_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::iter::<impl trie_node::TrieNode<K, V>>::child_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"child_iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"id\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::iter::<impl trie_node::TrieNode<K, V>>::child_iter::id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"kv_as_pair\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::iter::<impl trie_node::TrieNode<K, V>>::kv_as_pair"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Iter<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::iter::<impl std::iter::FromIterator<(K, V)> for Trie<K, V>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::<impl trie_node::TrieNode<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::<impl trie_node::TrieNode<K, V>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::<impl trie_node::TrieNode<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::<impl trie_node::TrieNode<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_ancestor\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::<impl trie_node::TrieNode<K, V>>::get_ancestor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_raw_ancestor\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::<impl trie_node::TrieNode<K, V>>::get_raw_ancestor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_raw_descendant\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::<impl trie_node::TrieNode<K, V>>::get_raw_descendant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iterative_get\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::iterative_get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iterative_get_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::iterative_get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iterative_insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::iterative_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recursive_remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::recursive_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_merge_child\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::get_merge_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rec_remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::rec_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_ancestor\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::get_ancestor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_raw_ancestor\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::get_raw_ancestor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traversal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_raw_descendant\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::traversal::get_raw_descendant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::value_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subtrie\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::subtrie"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subtrie_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::subtrie_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_ancestor\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::get_ancestor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_ancestor_value\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::get_ancestor_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_raw_ancestor\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::get_raw_ancestor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_raw_descendant\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::get_raw_descendant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map_with_default\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::map_with_default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check_integrity\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl Trie<K, V>>::check_integrity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl std::cmp::PartialEq for Trie<K, V>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie::<impl std::default::Default for Trie<K, V>>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subtrie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::subtrie::<impl SubTrie<'a, K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subtrie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subtrie_get\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::subtrie::subtrie_get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subtrie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"value_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::subtrie::<impl SubTrieMut<'a, K, V>>::value_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subtrie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::subtrie::<impl SubTrieMut<'a, K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subtrie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::subtrie::<impl SubTrieMut<'a, K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subtrie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::subtrie::<impl SubTrieMut<'a, K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subtrie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stripped\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::subtrie::stripped"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::KeyValue<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_key_value\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::with_key_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::value_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value_checked\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::value_checked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value_checked_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::value_checked_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compute_size\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::compute_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_child\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::add_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take_child\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::take_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take_only_child\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::take_only_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_key_value\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::add_key_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take_value\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::take_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"replace_value\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::replace_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_value_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::as_value_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_subtrie\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::as_subtrie"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_subtrie_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::as_subtrie_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check_integrity_recursive\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V>>::check_integrity_recursive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trie_node::TrieNode<K, V> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TrieCommon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie_common::TrieCommon::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TrieCommon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie_common::TrieCommon::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TrieCommon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie_common::TrieCommon::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TrieCommon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie_common::TrieCommon::is_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TrieCommon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie_common::TrieCommon::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TrieCommon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keys\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie_common::TrieCommon::keys"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TrieCommon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"values\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie_common::TrieCommon::values"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TrieCommon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prefix\"), disambiguator: 0 }]","fn_type":"Safe","name":"radix_trie::trie_common::TrieCommon::prefix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trie_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a Trie<K, V> as trie_common::ContainsTrieNode<'a, K, V>>::trie_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a Trie<K, V> as trie_common::TrieCommon<'a, K, V>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"children\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a Trie<K, V> as trie_common::TrieCommon<'a, K, V>>::children"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"trie_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'b SubTrie<'a, K, V> as trie_common::ContainsTrieNode<'a, K, V>>::trie_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'b SubTrie<'a, K, V> as trie_common::TrieCommon<'a, K, V>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"children\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'b SubTrie<'a, K, V> as trie_common::TrieCommon<'a, K, V>>::children"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"trie_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SubTrieMut<'a, K, V> as trie_common::ContainsTrieNode<'a, K, V>>::trie_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SubTrieMut<'a, K, V> as trie_common::TrieCommon<'a, K, V>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"children\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SubTrieMut<'a, K, V> as trie_common::TrieCommon<'a, K, V>>::children"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"trie_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'b SubTrieMut<'a, K, V> as trie_common::ContainsTrieNode<'b, K, V>>::trie_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'b SubTrieMut<'a, K, V> as trie_common::TrieCommon<'b, K, V>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie_common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"children\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'b SubTrieMut<'a, K, V> as trie_common::TrieCommon<'b, K, V>>::children"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Trie<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SubTrie<'a, K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SubTrieMut<'a, K, V> as std::fmt::Debug>::fmt"}
