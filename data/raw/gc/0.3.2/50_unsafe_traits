{"name":"<&'static T as trace::Trace>"}
{"name":"<() as trace::Trace>"}
{"name":"<isize as trace::Trace>"}
{"name":"<usize as trace::Trace>"}
{"name":"<bool as trace::Trace>"}
{"name":"<i8 as trace::Trace>"}
{"name":"<u8 as trace::Trace>"}
{"name":"<i16 as trace::Trace>"}
{"name":"<u16 as trace::Trace>"}
{"name":"<i32 as trace::Trace>"}
{"name":"<u32 as trace::Trace>"}
{"name":"<i64 as trace::Trace>"}
{"name":"<u64 as trace::Trace>"}
{"name":"<f32 as trace::Trace>"}
{"name":"<f64 as trace::Trace>"}
{"name":"<char as trace::Trace>"}
{"name":"<std::string::String as trace::Trace>"}
{"name":"<std::path::Path as trace::Trace>"}
{"name":"<std::path::PathBuf as trace::Trace>"}
{"name":"<std::sync::atomic::AtomicBool as trace::Trace>"}
{"name":"<std::sync::atomic::AtomicIsize as trace::Trace>"}
{"name":"<std::sync::atomic::AtomicUsize as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<[T; _] as trace::Trace>"}
{"name":"<fn() -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn() -> Ret as trace::Trace>"}
{"name":"<unsafe fn() -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn() -> Ret as trace::Trace>"}
{"name":"<fn(A) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, ...) -> Ret as trace::Trace>"}
{"name":"<(A,) as trace::Trace>"}
{"name":"<fn(A, B) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B) as trace::Trace>"}
{"name":"<fn(A, B, C) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B, C) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B, C) as trace::Trace>"}
{"name":"<fn(A, B, C, D) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B, C, D) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B, C, D) as trace::Trace>"}
{"name":"<fn(A, B, C, D, E) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B, C, D, E) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B, C, D, E) as trace::Trace>"}
{"name":"<fn(A, B, C, D, E, F) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B, C, D, E, F) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B, C, D, E, F) as trace::Trace>"}
{"name":"<fn(A, B, C, D, E, F, G) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B, C, D, E, F, G) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B, C, D, E, F, G) as trace::Trace>"}
{"name":"<fn(A, B, C, D, E, F, G, H) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, H) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, H, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B, C, D, E, F, G, H) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, H) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, H, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B, C, D, E, F, G, H) as trace::Trace>"}
{"name":"<fn(A, B, C, D, E, F, G, H, I) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, H, I) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, H, I, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B, C, D, E, F, G, H, I) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, H, I) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, H, I, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B, C, D, E, F, G, H, I) as trace::Trace>"}
{"name":"<fn(A, B, C, D, E, F, G, H, I, J) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, H, I, J) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, H, I, J, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B, C, D, E, F, G, H, I, J) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, H, I, J) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, H, I, J, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B, C, D, E, F, G, H, I, J) as trace::Trace>"}
{"name":"<fn(A, B, C, D, E, F, G, H, I, J, K) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, H, I, J, K) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, H, I, J, K, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B, C, D, E, F, G, H, I, J, K) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, H, I, J, K) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, H, I, J, K, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B, C, D, E, F, G, H, I, J, K) as trace::Trace>"}
{"name":"<fn(A, B, C, D, E, F, G, H, I, J, K, L) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, H, I, J, K, L) -> Ret as trace::Trace>"}
{"name":"<extern \"C\" fn(A, B, C, D, E, F, G, H, I, J, K, L, ...) -> Ret as trace::Trace>"}
{"name":"<unsafe fn(A, B, C, D, E, F, G, H, I, J, K, L) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, H, I, J, K, L) -> Ret as trace::Trace>"}
{"name":"<unsafe extern \"C\" fn(A, B, C, D, E, F, G, H, I, J, K, L, ...) -> Ret as trace::Trace>"}
{"name":"<(A, B, C, D, E, F, G, H, I, J, K, L) as trace::Trace>"}
{"name":"<std::boxed::Box<T> as trace::Trace>"}
{"name":"<std::vec::Vec<T> as trace::Trace>"}
{"name":"<std::option::Option<T> as trace::Trace>"}
{"name":"<std::result::Result<T, E> as trace::Trace>"}
{"name":"<std::collections::BinaryHeap<T> as trace::Trace>"}
{"name":"<std::collections::BTreeMap<K, V> as trace::Trace>"}
{"name":"<std::collections::BTreeSet<T> as trace::Trace>"}
{"name":"<std::collections::HashMap<K, V> as trace::Trace>"}
{"name":"<std::collections::HashSet<T> as trace::Trace>"}
{"name":"<std::collections::LinkedList<T> as trace::Trace>"}
{"name":"<std::collections::VecDeque<T> as trace::Trace>"}
{"name":"<Gc<T> as trace::Trace>"}
{"name":"<GcCell<T> as trace::Trace>"}
{"name":"<GcCell<T> as std::marker::Send>"}
