{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"flag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"activate\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::flag::Flag::activate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"flag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_activated\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::flag::Flag::is_activated"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"flag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_matches\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::flag::Flag::get_matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"flag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arguments::flag::Flag as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"flag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::flag::<impl std::convert::From<arguments::flag::Flag> for arguments::argument::Argument<'static>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::value::Value::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_default\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::value::Value::with_default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_value\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::value::Value::set_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_value\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::value::Value::get_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_value\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::value::Value::has_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::value::<impl std::convert::From<arguments::value::Value> for arguments::argument::Argument<'static>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_convert\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::value::try_convert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::command::Command::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"execute\"), disambiguator: 0 }]","has_unsafe":true,"name":"arguments::command::Command::execute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arguments::command::Command as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"arguments::command::<impl std::convert::From<arguments::command::Command> for arguments::argument::Argument<'static>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"argument\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_callback\"), disambiguator: 0 }]","has_unsafe":true,"name":"arguments::argument::Argument::with_callback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"argument\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_metadata\"), disambiguator: 0 }]","has_unsafe":true,"name":"arguments::argument::Argument::with_metadata"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"argument\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"execute_callback\"), disambiguator: 0 }]","has_unsafe":true,"name":"arguments::argument::Argument::execute_callback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_callback\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arguments::metadata::Metadata<'a, T>>::set_callback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arguments\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arguments::metadata::Metadata<'a, T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::parser::Parser::register"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::parser::Parser::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::parser::Parser<'a> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free_argument_support\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::free_argument_support::FreeArgumentSupport as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free_argument_support\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::free_argument_support::FreeArgumentSupport as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free_argument_support\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::free_argument_support::FreeArgumentSupport as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free_argument_support\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::free_argument_support::FreeArgumentSupport as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::result::Result as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::result::Result as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::result::Result as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::result::Result as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scanner::token::Token as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<scanner::token::Token as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<scanner::token::Token as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scanner::token::Token as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"scanner::token::<impl std::convert::From<scanner::token::Token> for std::string::String>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"scanner_unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scanner::scanner_unix::Unix<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"scanner_unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scanner::scanner_unix::Unix as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"scanner_unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scanner::scanner_unix::Unix<std::vec::IntoIter<std::string::String>> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"scanner_unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scanner::scanner_unix::Unix<std::vec::IntoIter<std::string::String>>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"scanner_windows\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scanner::scanner_windows::Windows<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"scanner_windows\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scanner::scanner_windows::Windows as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"scanner_windows\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scanner::scanner_windows::Windows<std::vec::IntoIter<std::string::String>> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scanner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"scanner_windows\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scanner::scanner_windows::Windows<std::vec::IntoIter<std::string::String>>>::new"}
