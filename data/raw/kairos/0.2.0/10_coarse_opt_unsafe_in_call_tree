{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as error_chain::ChainedError>::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as error_chain::ChainedError>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extract_backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as error_chain::ChainedError>::extract_backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::KairosError::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::KairosError::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_boxed_chain\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::KairosError::with_boxed_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::KairosError::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::KairosError::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::KairosError::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::KairosError::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as std::convert::From<nom::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as std::convert::From<error::KairosErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosError as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::KairosErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::KairosErrorKind as std::convert::From<error::KairosError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::result::Result<T, E> as error::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::option::Option<T> as error::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::Iter as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":false,"name":"iter::Iter::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"increment\"), disambiguator: 0 }]","has_unsafe":false,"name":"iter::Iter::increment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip\"), disambiguator: 0 }]","has_unsafe":false,"name":"iter::Iter::skip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rollback\"), disambiguator: 0 }]","has_unsafe":false,"name":"iter::Iter::rollback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recalculate\"), disambiguator: 0 }]","has_unsafe":false,"name":"iter::Iter::recalculate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::Iter as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::FilterIter<I, M> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::FilterIter<I, M>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::FilterIter<I, M> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"every\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as iter::EveryFilter<M>>::every"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::WithoutIter<I, M> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::WithoutIter<I, M>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::WithoutIter<I, M> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"without\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as iter::WithoutFilter<M>>::without"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::UntilIter<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::UntilIter<I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::UntilIter<I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"until\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as iter::Until>::until"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::TimesIter<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::TimesIter<I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<iter::TimesIter<I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"times\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as iter::Times>::times"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"extensions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"minutely\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as iter::extensions::Minutely>::minutely"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"extensions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hourly\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as iter::extensions::Hourly>::hourly"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"extensions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"daily\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as iter::extensions::Daily>::daily"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"extensions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"weekly\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as iter::extensions::Weekly>::weekly"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"extensions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"monthly\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as iter::extensions::Monthly>::monthly"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"extensions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"yearly\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as iter::extensions::Yearly>::yearly"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"extensions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"every\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as iter::extensions::Every>::every"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timetype::TimeType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timetype::TimeType as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timetype::TimeType as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timetype::TimeType as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timetype::TimeType as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timetype::TimeType as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timetype::TimeType as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timetype::TimeType as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"today\"), disambiguator: 0 }]","has_unsafe":true,"name":"timetype::TimeType::today"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_a_amount\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::is_a_amount"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_moment\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::is_moment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_addition\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::is_addition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_subtraction\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::is_subtraction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"seconds\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::seconds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"minutes\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::minutes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hours\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::hours"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"days\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::days"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"weeks\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::weeks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"months\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::months"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"years\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::years"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"moment\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::moment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_year\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::end_of_year"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_month\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::end_of_month"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_day\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::end_of_day"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_hour\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::end_of_hour"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_minute\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::end_of_minute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_seconds\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::get_seconds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_minutes\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::get_minutes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_hours\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::get_hours"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_days\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::get_days"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_months\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::get_months"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_years\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::get_years"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_moment\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::get_moment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_a\"), disambiguator: 0 }]","has_unsafe":true,"name":"timetype::TimeType::is_a"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_in\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::is_in"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"calculate\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::TimeType::calculate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_timetype\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timetype::TimeType as timetype::IntoTimeType>::into_timetype"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"do_calculate\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::do_calculate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_year\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::end_of_year"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_month\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::end_of_month"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_day\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::end_of_day"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_hour\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::end_of_hour"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_minute\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::end_of_minute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_to_seconds\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::add_to_seconds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_to_minutes\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::add_to_minutes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_to_hours\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::add_to_hours"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_to_days\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::add_to_days"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_to_months\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::add_to_months"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_to_years\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::add_to_years"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_to_moment\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::add_to_moment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_seconds\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::sub_from_seconds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_minutes\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::sub_from_minutes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_hours\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::sub_from_hours"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_days\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::sub_from_days"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_months\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::sub_from_months"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_years\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::sub_from_years"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_moment\"), disambiguator: 0 }]","has_unsafe":false,"name":"timetype::sub_from_moment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<indicator::Day as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<indicator::Day as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<indicator::Day as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<indicator::Day as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<indicator::Day as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<indicator::Day as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<indicator::Day as std::convert::Into<chrono::Weekday>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<indicator::Month as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<indicator::Month as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<indicator::Month as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<indicator::Month as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<indicator::Month as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<indicator::Month as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indicator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<indicator::Month as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matcher\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"matches\"), disambiguator: 0 }]","has_unsafe":false,"name":"<indicator::Day as matcher::Matcher>::matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matcher\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"matches\"), disambiguator: 0 }]","has_unsafe":false,"name":"<indicator::Month as matcher::Matcher>::matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"integer\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::integer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::integer::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::unit_parser"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 23 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 22 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 21 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 20 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 19 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 18 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 17 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 16 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 15 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 14 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 13 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 12 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 11 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 10 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 9 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 8 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 7 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 6 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 5 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 4 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 3 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 2 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::unit_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::Unit as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::Unit as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::Unit as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::UnitAlias as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::UnitAlias as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::UnitAlias as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::UnitAlias as std::convert::Into<parser::timetype::Unit>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"operator_parser\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::operator_parser"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"operator_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parser::timetype::operator_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"operator_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::operator_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::Operator as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::Operator as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::Operator as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_alias\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::unit_alias"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_alias\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 6 }]","has_unsafe":false,"name":"parser::timetype::unit_alias::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_alias\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 5 }]","has_unsafe":false,"name":"parser::timetype::unit_alias::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_alias\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 4 }]","has_unsafe":false,"name":"parser::timetype::unit_alias::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_alias\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 3 }]","has_unsafe":false,"name":"parser::timetype::unit_alias::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_alias\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 2 }]","has_unsafe":false,"name":"parser::timetype::unit_alias::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_alias\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parser::timetype::unit_alias::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_alias\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::unit_alias::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"amount_parser\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::amount_parser"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"amount_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parser::timetype::amount_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"amount_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::amount_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::Amount as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::Amount as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::Amount as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::Amount as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_timetype\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::Amount as timetype::IntoTimeType>::into_timetype"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"amount_expr_next\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::amount_expr_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"amount_expr\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::amount_expr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::AmountExpr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::AmountExpr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::AmountExpr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::AmountExpr as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_timetype\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::AmountExpr as timetype::IntoTimeType>::into_timetype"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exact_date_parser\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::timetype::exact_date_parser"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exact_date_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 4 }]","has_unsafe":false,"name":"parser::timetype::exact_date_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exact_date_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 3 }]","has_unsafe":false,"name":"parser::timetype::exact_date_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exact_date_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 2 }]","has_unsafe":false,"name":"parser::timetype::exact_date_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exact_date_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parser::timetype::exact_date_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exact_date_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::exact_date_parser::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::ExactDate as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::ExactDate as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::ExactDate as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::ExactDate as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_timetype\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::ExactDate as timetype::IntoTimeType>::into_timetype"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"date\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::timetype::date"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::Date as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::Date as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::Date as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::Date as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_timetype\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::Date as timetype::IntoTimeType>::into_timetype"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::TimeType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::TimeType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::TimeType as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::timetype::TimeType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_timetype\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::timetype::TimeType as timetype::IntoTimeType>::into_timetype"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"timetype\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::timetype::timetype"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parser::timetype::timetype::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"timetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::timetype::timetype::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter_spec\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::iterator::iter_spec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter_spec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 7 }]","has_unsafe":false,"name":"parser::iterator::iter_spec::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter_spec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 6 }]","has_unsafe":false,"name":"parser::iterator::iter_spec::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter_spec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 5 }]","has_unsafe":false,"name":"parser::iterator::iter_spec::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter_spec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 4 }]","has_unsafe":false,"name":"parser::iterator::iter_spec::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter_spec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 3 }]","has_unsafe":false,"name":"parser::iterator::iter_spec::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter_spec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 2 }]","has_unsafe":false,"name":"parser::iterator::iter_spec::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter_spec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parser::iterator::iter_spec::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter_spec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::iterator::iter_spec::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::iterator::Iterspec as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::iterator::Iterspec as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::iterator::Iterspec as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::iterator::Iterspec as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"until_spec\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::iterator::until_spec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"until_spec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parser::iterator::until_spec::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"until_spec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::iterator::until_spec::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::iterator::UntilSpec as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::iterator::UntilSpec as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::iterator::UntilSpec as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::iterator::UntilSpec as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iterator\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::iterator::iterator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::iterator::Iterator as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::iterator::Iterator as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::iterator::Iterator as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::iterator::Iterator as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_user_iterator\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::iterator::Iterator::into_user_iterator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::iterator::UserIterator<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::iterator::UserIterator<I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"do_parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::do_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"do_parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parser::do_parse::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"do_parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::do_parse::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"adjust_times_add\"), disambiguator: 0 }]","has_unsafe":false,"name":"util::adjust_times_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"adjust_times_sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"util::adjust_times_sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_num_of_days_in_month\"), disambiguator: 0 }]","has_unsafe":false,"name":"util::get_num_of_days_in_month"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_leap_year\"), disambiguator: 0 }]","has_unsafe":false,"name":"util::is_leap_year"}
