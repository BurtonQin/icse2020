{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft2\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::fft::fft2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft2_inverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::fft::fft2_inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft2_in_place_rearrange\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fft::fft2_in_place_rearrange"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft2_in_place_compute\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::fft::fft2_in_place_compute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trigits_len\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fft::trigits_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft3_in_place_rearrange\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fft::fft3_in_place_rearrange"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft3_in_place_compute\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::fft::fft3_in_place_compute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft3\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::fft::fft3"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft3_inverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::fft::fft3_inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_i64\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::Field::from_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i64\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::Field::to_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::Field::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::Field::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"qpow\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::Field::qpow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::native::Value as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::native::Value as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::native::NativeField as fields::Field>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"modulus\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::native::NativeField as fields::Field>::modulus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::native::NativeField as fields::Field>::from_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::native::NativeField as fields::Field>::to_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::native::NativeField as fields::Field>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::native::NativeField as fields::Field>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::native::NativeField as fields::Field>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inv\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fields::native::NativeField as fields::Field>::inv"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::montgomery::Value as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::montgomery::Value as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::montgomery::MontgomeryField32::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"redc\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::montgomery::MontgomeryField32::redc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"modulus\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::montgomery::MontgomeryField32 as fields::Field>::modulus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::montgomery::MontgomeryField32 as fields::Field>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::montgomery::MontgomeryField32 as fields::Field>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::montgomery::MontgomeryField32 as fields::Field>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"inv\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::montgomery::MontgomeryField32 as fields::Field>::inv"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::montgomery::MontgomeryField32 as fields::Field>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::montgomery::MontgomeryField32 as fields::Field>::from_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::montgomery::MontgomeryField32 as fields::Field>::to_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gcd\"), disambiguator: 0 }]","has_unsafe":false,"name":"numtheory::gcd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mod_inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"numtheory::mod_inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mod_pow\"), disambiguator: 0 }]","has_unsafe":false,"name":"numtheory::mod_pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft2\"), disambiguator: 0 }]","has_unsafe":true,"name":"numtheory::fft2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft2_inverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"numtheory::fft2_inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft3\"), disambiguator: 0 }]","has_unsafe":true,"name":"numtheory::fft3"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fft3_inverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"numtheory::fft3_inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lagrange_interpolation_at_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"numtheory::lagrange_interpolation_at_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"newton_interpolation_general\"), disambiguator: 0 }]","has_unsafe":false,"name":"numtheory::newton_interpolation_general"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"newton_evaluate\"), disambiguator: 0 }]","has_unsafe":false,"name":"numtheory::newton_evaluate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compute_newton_coefficients\"), disambiguator: 0 }]","has_unsafe":false,"name":"numtheory::compute_newton_coefficients"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"positivise\"), disambiguator: 0 }]","has_unsafe":false,"name":"numtheory::positivise"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"numtheory\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mod_evaluate_polynomial\"), disambiguator: 0 }]","has_unsafe":false,"name":"numtheory::mod_evaluate_polynomial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"shamir\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<shamir::ShamirSecretSharing as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"shamir\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reconstruct_limit\"), disambiguator: 0 }]","has_unsafe":false,"name":"shamir::ShamirSecretSharing::reconstruct_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"shamir\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"share\"), disambiguator: 0 }]","has_unsafe":true,"name":"shamir::ShamirSecretSharing::share"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"shamir\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reconstruct\"), disambiguator: 0 }]","has_unsafe":false,"name":"shamir::ShamirSecretSharing::reconstruct"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"shamir\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_polynomial\"), disambiguator: 0 }]","has_unsafe":true,"name":"shamir::ShamirSecretSharing::sample_polynomial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"shamir\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"evaluate_polynomial\"), disambiguator: 0 }]","has_unsafe":false,"name":"shamir::ShamirSecretSharing::evaluate_polynomial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<packed::PackedSecretSharing as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<packed::PackedSecretSharing as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<packed::PackedSecretSharing as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<packed::PackedSecretSharing as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reconstruct_limit\"), disambiguator: 0 }]","has_unsafe":false,"name":"packed::PackedSecretSharing::reconstruct_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"share\"), disambiguator: 0 }]","has_unsafe":true,"name":"packed::PackedSecretSharing::share"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_polynomial\"), disambiguator: 0 }]","has_unsafe":true,"name":"packed::PackedSecretSharing::sample_polynomial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recover_polynomial\"), disambiguator: 0 }]","has_unsafe":true,"name":"packed::PackedSecretSharing::recover_polynomial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"evaluate_polynomial\"), disambiguator: 0 }]","has_unsafe":true,"name":"packed::PackedSecretSharing::evaluate_polynomial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"packed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reconstruct\"), disambiguator: 0 }]","has_unsafe":false,"name":"packed::PackedSecretSharing::reconstruct"}
