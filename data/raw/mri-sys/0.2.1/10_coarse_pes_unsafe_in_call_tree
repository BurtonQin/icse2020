{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<value::VALUE as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<value::VALUE as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<value::VALUE as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<value::VALUE as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<value::VALUE as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<value::VALUE as std::ops::BitAnd>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vt::value_type as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"INT2FIX\"), disambiguator: 0 }]","fn_type":"Safe","name":"mri_sys::functions::INT2FIX"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"TYPE_P\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mri_sys::ty::TYPE_P"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FLOAT_TYPE_P\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mri_sys::ty::FLOAT_TYPE_P"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"BUILTIN_TYPE\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mri_sys::ty::BUILTIN_TYPE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FLONUM_P\"), disambiguator: 0 }]","fn_type":"Safe","name":"mri_sys::ty::FLONUM_P"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FIXNUM_P\"), disambiguator: 0 }]","fn_type":"Safe","name":"mri_sys::ty::FIXNUM_P"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"DYNAMIC_SYM_P\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mri_sys::ty::DYNAMIC_SYM_P"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"STATIC_SYM_P\"), disambiguator: 0 }]","fn_type":"Safe","name":"mri_sys::ty::STATIC_SYM_P"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SYMBOL_P\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"mri_sys::ty::SYMBOL_P"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SPECIAL_CONST_P\"), disambiguator: 0 }]","fn_type":"Safe","name":"mri_sys::ty::SPECIAL_CONST_P"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"IMMEDIATE_P\"), disambiguator: 0 }]","fn_type":"Safe","name":"mri_sys::ty::IMMEDIATE_P"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"RTEST\"), disambiguator: 0 }]","fn_type":"Safe","name":"mri_sys::ty::RTEST"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NIL_P\"), disambiguator: 0 }]","fn_type":"Safe","name":"mri_sys::ty::NIL_P"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ID as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ID as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ID as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ID as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ID as std::cmp::Eq>::assert_receiver_is_total_eq"}
