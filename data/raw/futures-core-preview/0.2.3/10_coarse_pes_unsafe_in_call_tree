{"def_path":"[DisambiguatedDefPathData { data: Module(\"poll\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<poll::Async<T> as core::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poll\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<poll::Async<T> as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poll\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<poll::Async<T> as core::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poll\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<poll::Async<T> as core::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poll\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":true,"name":"<poll::Async<T>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poll\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_ready\"), disambiguator: 0 }]","has_unsafe":false,"name":"<poll::Async<T>>::is_ready"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poll\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_pending\"), disambiguator: 0 }]","has_unsafe":false,"name":"<poll::Async<T>>::is_pending"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poll\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<poll::Async<T> as core::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"option\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::option::FutureOption<T> as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"option\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::option::FutureOption<T> as core::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"option\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_future\"), disambiguator: 0 }]","has_unsafe":false,"name":"future::option::<impl future::IntoFuture for core::option::Option<T>>::into_future"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"option\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<future::option::FutureOption<F> as future::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"option\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::option::FutureOption<T> as core::convert::From<core::option::Option<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::result_::FutureResult<T, E> as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::result_::FutureResult<T, E> as core::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_future\"), disambiguator: 0 }]","has_unsafe":false,"name":"future::result_::<impl future::IntoFuture for core::result::Result<T, E>>::into_future"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"result\"), disambiguator: 0 }]","has_unsafe":false,"name":"future::result_::result"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ok\"), disambiguator: 0 }]","has_unsafe":false,"name":"future::result_::ok"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"err\"), disambiguator: 0 }]","has_unsafe":false,"name":"future::result_::err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::result_::FutureResult<T, E> as future::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"result_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::result_::FutureResult<T, E> as core::convert::From<core::result::Result<T, E>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"either\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"future::either::<impl future::Future for either::Either<A, B>>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"either\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll_next\"), disambiguator: 0 }]","has_unsafe":true,"name":"future::either::<impl stream::Stream for either::Either<A, B>>::poll_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut F as future::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::boxed::Box<F> as future::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::panic::AssertUnwindSafe<F> as future::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_future\"), disambiguator: 0 }]","has_unsafe":false,"name":"<F as future::IntoFuture>::into_future"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll_next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut S as stream::Stream>::poll_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll_next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::boxed::Box<S> as stream::Stream>::poll_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll_next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::panic::AssertUnwindSafe<S> as stream::Stream>::poll_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll_next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::collections::VecDeque<T> as stream::Stream>::poll_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wake\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"wake\"), disambiguator: 0 }]","has_unsafe":true,"name":"task::wake::Waker::wake"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wake\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"will_wake\"), disambiguator: 0 }]","has_unsafe":false,"name":"task::wake::Waker::will_wake"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wake\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<task::wake::Waker as core::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wake\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<task::wake::Waker as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wake\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<task::wake::Waker as core::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"wake\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<task::wake::Waker as core::convert::From<std::sync::Arc<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"without_spawn\"), disambiguator: 0 }]","has_unsafe":false,"name":"task::context::Context::without_spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"waker\"), disambiguator: 0 }]","has_unsafe":false,"name":"task::context::Context::waker"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_parts\"), disambiguator: 0 }]","has_unsafe":true,"name":"task::context::Context::with_parts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_waker\"), disambiguator: 0 }]","has_unsafe":true,"name":"task::context::Context::with_waker"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_locals\"), disambiguator: 0 }]","has_unsafe":true,"name":"task::context::Context::with_locals"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"task::context::Context::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"executor\"), disambiguator: 0 }]","has_unsafe":false,"name":"task::context::Context::executor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","has_unsafe":true,"name":"task::context::Context::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_executor\"), disambiguator: 0 }]","has_unsafe":true,"name":"task::context::Context::with_executor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<task::context::Context<'a> as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"local_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"task::data::local_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<task::data::LocalKey<T> as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<task::data::IdHasher as core::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":false,"name":"<task::data::IdHasher as core::hash::Hasher>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"write_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<task::data::IdHasher as core::hash::Hasher>::write_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","has_unsafe":false,"name":"<task::data::IdHasher as core::hash::Hasher>::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<task::data::LocalKey<T>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"atomic_waker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"task::atomic_waker::AtomicWaker::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"atomic_waker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","has_unsafe":true,"name":"task::atomic_waker::AtomicWaker::register"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"atomic_waker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"wake\"), disambiguator: 0 }]","has_unsafe":true,"name":"task::atomic_waker::AtomicWaker::wake"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"atomic_waker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<task::atomic_waker::AtomicWaker as core::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"atomic_waker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<task::atomic_waker::AtomicWaker as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"task::LocalMap::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<task::LocalMap as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"status\"), disambiguator: 0 }]","has_unsafe":false,"name":"executor::Executor::status"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<executor::SpawnError as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shutdown\"), disambiguator: 0 }]","has_unsafe":false,"name":"executor::SpawnError::shutdown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_shutdown\"), disambiguator: 0 }]","has_unsafe":false,"name":"executor::SpawnError::is_shutdown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"never\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<never::Never as core::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"never\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<never::Never as core::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"never\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<never::Never as core::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"never\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<never::Never as core::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"never\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<never::Never as core::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"never\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<never::Never as core::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"never\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"never_into\"), disambiguator: 0 }]","has_unsafe":false,"name":"never::Never::never_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"never\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":false,"name":"<never::Never as future::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"never\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll_next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<never::Never as stream::Stream>::poll_next"}
