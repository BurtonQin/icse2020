{"def_path":"[DisambiguatedDefPathData { data: Module(\"helper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize_headers\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::helper::serialize_headers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"helper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize_headers\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::helper::deserialize_headers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as error_chain::ChainedError>::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as error_chain::ChainedError>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extract_backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::extract_backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::error::Error::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::error::Error::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_boxed_chain\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::error::Error::with_boxed_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::error::Error::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::error::Error::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::error::Error::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::error::Error::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<reqwest::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<serde_json::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<std::string::FromUtf8Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<error::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::error::ErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::convert::From<error::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<T, E> as error::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::option::Option<T> as error::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::ClientConfig as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::ClientConfig as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::ClientConfig as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::config::ClientConfig::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::RedirectPolicy as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::RedirectPolicy as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::RedirectPolicy as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::config::<impl std::convert::From<config::RedirectPolicy> for reqwest::RedirectPolicy>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<body::Body as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<body::BodyValue as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_to_vec\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::body::Body::try_to_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::body::<impl std::convert::From<body::Body> for reqwest::Body>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<body::Body as std::convert::From<std::vec::Vec<u8>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<body::Body as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<body::Body as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<body::Body as std::convert::From<&'static [u8]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<body::Body as std::convert::From<std::fs::File>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<request::RequestHeader as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<request::RequestHeader as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request::RequestHeader as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request::RequestHeader as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<request::Request as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_mem\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::request::Request::to_mem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<request::RequestMem as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<request::RequestMem as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request::RequestMem as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request::RequestMem as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<request::Request as std::convert::From<request::RequestMem>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request::RequestMem as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request::RequestMem as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request::RequestMem as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request::RequestMem as serde::Deserialize<'de>>::deserialize::_IMPL_DESERIALIZE_FOR_Field::<impl serde::Deserialize<'de> for <request::RequestMem as serde::Deserialize<'de>>::deserialize::Field>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<request::RequestMem as serde::Deserialize<'de>>::deserialize::_IMPL_DESERIALIZE_FOR_Field::<impl serde::Deserialize<'de> for <request::RequestMem as serde::Deserialize<'de>>::deserialize::Field>::deserialize::__FieldVisitor<'de> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<<request::RequestMem as serde::Deserialize<'de>>::deserialize::_IMPL_DESERIALIZE_FOR_Field::<impl serde::Deserialize<'de> for <request::RequestMem as serde::Deserialize<'de>>::deserialize::Field>::deserialize::__FieldVisitor<'de> as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<<request::RequestMem as serde::Deserialize<'de>>::deserialize::_IMPL_DESERIALIZE_FOR_Field::<impl serde::Deserialize<'de> for <request::RequestMem as serde::Deserialize<'de>>::deserialize::Field>::deserialize::__FieldVisitor<'de> as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<<request::RequestMem as serde::Deserialize<'de>>::deserialize::_IMPL_DESERIALIZE_FOR_Field::<impl serde::Deserialize<'de> for <request::RequestMem as serde::Deserialize<'de>>::deserialize::Field>::deserialize::__FieldVisitor<'de> as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<request::RequestMem as serde::Deserialize<'de>>::deserialize::RequestVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<<request::RequestMem as serde::Deserialize<'de>>::deserialize::RequestVisitor as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<response::Response as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<response::Response as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<response::Response as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<response::Response as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"body_to_utf8\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::response::Response::body_to_utf8"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<response::Response as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::response::_IMPL_DESERIALIZE_FOR_Field::<impl serde::Deserialize<'de> for response::Field>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","fn_type":"Safe","name":"<response::_IMPL_DESERIALIZE_FOR_Field::<impl serde::Deserialize<'de> for response::Field>::deserialize::__FieldVisitor<'de> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<response::_IMPL_DESERIALIZE_FOR_Field::<impl serde::Deserialize<'de> for response::Field>::deserialize::__FieldVisitor<'de> as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<response::_IMPL_DESERIALIZE_FOR_Field::<impl serde::Deserialize<'de> for response::Field>::deserialize::__FieldVisitor<'de> as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<response::_IMPL_DESERIALIZE_FOR_Field::<impl serde::Deserialize<'de> for response::Field>::deserialize::__FieldVisitor<'de> as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","fn_type":"Safe","name":"<response::ResponseVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<response::ResponseVisitor as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<response::Response as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::Client::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"post\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::Client::post"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"put\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::Client::put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"patch\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::Client::patch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"delete\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::Client::delete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"head\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::Client::head"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"request\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::Client::request"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direct\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::direct::DirectClient::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direct\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"execute\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::direct::DirectClient as client::Client>::execute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direct\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"config\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::direct::DirectClient as client::Client>::config"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direct\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"config_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::direct::DirectClient as client::Client>::config_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"file\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::replay::RecordingTarget::file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dir\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::replay::RecordingTarget::dir"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::replay::ReplayClient::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"force_record_next\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::replay::ReplayClient::force_record_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"replay_file_path\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::replay::ReplayClient::replay_file_path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_data\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::replay::ReplayClient::get_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"store_data\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::replay::ReplayClient::store_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"execute\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::replay::ReplayClient as client::Client>::execute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"config\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::replay::ReplayClient as client::Client>::config"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"config_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::replay::ReplayClient as client::Client>::config_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::replay::ReplayData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_ReplayData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::replay::_IMPL_SERIALIZE_FOR_ReplayData::<impl serde::Serialize for client::replay::ReplayData>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ReplayData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::replay::_IMPL_DESERIALIZE_FOR_ReplayData::<impl serde::Deserialize<'de> for client::replay::ReplayData>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ReplayData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::replay::_IMPL_DESERIALIZE_FOR_ReplayData::<impl serde::Deserialize<'de> for client::replay::ReplayData>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ReplayData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::replay::_IMPL_DESERIALIZE_FOR_ReplayData::<impl serde::Deserialize<'de> for client::replay::ReplayData>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ReplayData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::replay::_IMPL_DESERIALIZE_FOR_ReplayData::<impl serde::Deserialize<'de> for client::replay::ReplayData>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ReplayData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::replay::_IMPL_DESERIALIZE_FOR_ReplayData::<impl serde::Deserialize<'de> for client::replay::ReplayData>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ReplayData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::replay::_IMPL_DESERIALIZE_FOR_ReplayData::<impl serde::Deserialize<'de> for client::replay::ReplayData>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ReplayData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::replay::_IMPL_DESERIALIZE_FOR_ReplayData::<impl serde::Deserialize<'de> for client::replay::ReplayData>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ReplayData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::replay::_IMPL_DESERIALIZE_FOR_ReplayData::<impl serde::Deserialize<'de> for client::replay::ReplayData>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"replay\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ReplayData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::replay::_IMPL_DESERIALIZE_FOR_ReplayData::<impl serde::Deserialize<'de> for client::replay::ReplayData>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubStrictness as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubStrictness as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubStrictness as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::stub::settings::StubStrictness as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubDefault as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubDefault as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubDefault as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::stub::settings::StubDefault as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubSettings as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubSettings as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubSettings as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::stub::settings::StubSettings as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubSettings as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"settings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::settings::StubSettings as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::builder::RequestStubber::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"method\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::builder::RequestStubber::method"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"body\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::stub::builder::RequestStubber::body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"header\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::builder::RequestStubber::header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"headers\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::builder::RequestStubber::headers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"response\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::builder::RequestStubber::response"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"status_code\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::builder::ResponseStubber::status_code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"body\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::stub::builder::ResponseStubber::body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"header\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::stub::builder::ResponseStubber::header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"headers\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::stub::builder::ResponseStubber::headers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"mock\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::builder::ResponseStubber::mock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::StubKey as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::StubKey as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::StubKey as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::StubKey as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_to_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::StubRequest::try_to_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::StubClient::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"stub\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::StubClient::stub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"stub_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::StubClient::stub_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"register_stub\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::stub::StubClient::register_stub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"execute\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::stub::StubClient as client::Client>::execute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"config\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::StubClient as client::Client>::config"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"config_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::stub::StubClient as client::Client>::config_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"direct\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::generic::GenericClient::direct"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"replay_file\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::generic::GenericClient::replay_file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"replay_dir\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"reqwest_mock::client::generic::GenericClient::replay_dir"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stub\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::generic::GenericClient::stub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"force_record_next\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqwest_mock::client::generic::GenericClient::force_record_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::generic::GenericClient as std::convert::From<client::direct::DirectClient>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::generic::GenericClient as std::convert::From<client::replay::ReplayClient>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::generic::GenericClient as std::convert::From<client::stub::StubClient>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"execute\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::generic::GenericClient as client::Client>::execute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"config\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::generic::GenericClient as client::Client>::config"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"config_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::generic::GenericClient as client::Client>::config_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request_builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request_builder::RequestBuilder<'cl, Cl>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request_builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"header\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request_builder::RequestBuilder<'cl, Cl>>::header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request_builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"headers\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request_builder::RequestBuilder<'cl, Cl>>::headers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request_builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"body\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request_builder::RequestBuilder<'cl, Cl>>::body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request_builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<request_builder::RequestBuilder<'cl, Cl>>::send"}
