{"def_path":"[DisambiguatedDefPathData { data: Module(\"re\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"re\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"topdown::re::re"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"re\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<re::Re as Parser<std::string::String>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"chainl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chainl\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::chainl::chainl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"chainl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tail\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<chainl::Chainl<'a, T>>::tail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"chainl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<chainl::Chainl<'a, T> as Parser<T>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"chainr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chainr\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::chainr::chainr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"chainr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<chainr::Chainr<'a, T> as Parser<T>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"choice\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::choice::choice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<choice::Choice<'a, T> as Parser<T>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"until\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"until\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::until::until"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"until\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<until::Until<'a, T> as Parser<std::string::String>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::many::many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<many::Many<'a, T> as Parser<std::vec::Vec<T>>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"many1\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many1\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::many1::many1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"many1\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<many1::Many1<'a, T> as Parser<std::vec::Vec<T>>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyword\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keyword\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::keyword::keyword"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyword\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<keyword::Keyword<'a> as Parser<std::string::String>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyword\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<keyword::Keyword<'a> as Parser<std::string::String>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"try\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::try::try"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"try\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<try::Try<'a, T> as Parser<T>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::skip::skip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hook\"), disambiguator: 0 }]","fn_type":"Safe","name":"<skip::Skip<'a> as ParserHook>::hook"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<skip::Skip<'a> as Parser<std::string::String>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cond\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cond\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::cond::cond"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cond\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cond::Cond<'a, S, T> as Parser<T>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"opt\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::opt::opt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<opt::Opt<'a, T> as Parser<T>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"opt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<opt::Opt<'a, T> as Parser<T>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrapper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wrapper::FunctionWrapper<F, T> as Parser<T>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrapper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hook\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wrapper::FunctionWrapper<F, T> as ParserHook>::hook"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wrapper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"wrap\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::wrapper::wrap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"split\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::split::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"split\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<split::Split<'a, T> as Parser<std::vec::Vec<T>>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"many_until\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many_until\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::many_until::many_until"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"many_until\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<many_until::ManyUntil<'a, S, T> as Parser<std::vec::Vec<S>>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LocationInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LocationInfo as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LocationInfo as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LocationInfo as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LocationInfo as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LocationInfo as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LocationInfo as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LocationInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LocationInfo as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ParserResult<T>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"and_then\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ParserResult<T>>::and_then"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"view\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::CharSeq::view"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eof\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::CharSeq::eof"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::CharSeq::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fail\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::CharSeq::fail"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_location\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::CharSeq::get_location"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"current\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::CharSeq::current"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::CharSeq::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"add_hook\"), disambiguator: 0 }]","fn_type":"Safe","name":"topdown::CharSeq::add_hook"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"do_hook\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"topdown::CharSeq::do_hook"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"topdown::CharSeq::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"topdown::Parser::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lookahead\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"topdown::Parser::lookahead"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a str as Parser<std::string::String>>::_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<EOF as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"_parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<EOF as Parser<()>>::_parse"}
