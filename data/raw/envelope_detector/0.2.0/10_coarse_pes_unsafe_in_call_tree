{"def_path":"[DisambiguatedDefPathData { data: Module(\"mode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_frame\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::Peak<R> as mode::Mode<F>>::next_frame"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_frame\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rms::Rms<F> as mode::Mode<F>>::next_frame"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peak::PositiveHalfWave as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::PositiveHalfWave as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::PositiveHalfWave as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peak::NegativeHalfWave as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::NegativeHalfWave as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::NegativeHalfWave as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peak::FullWave as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::FullWave as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::FullWave as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rectify\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::PositiveHalfWave as peak::Rectifier<F>>::rectify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"rectify\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::NegativeHalfWave as peak::Rectifier<F>>::rectify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"rectify\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::FullWave as peak::Rectifier<F>>::rectify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peak::Peak<R> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peak::Peak<R> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peak::Peak<R> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peak::Peak<R> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"full_wave\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peak::Peak>::full_wave"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"positive_half_wave\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peak::Peak<peak::PositiveHalfWave>>::positive_half_wave"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"negative_half_wave\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peak::Peak<peak::NegativeHalfWave>>::negative_half_wave"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"rectify\"), disambiguator: 0 }]","has_unsafe":true,"name":"<peak::Peak<R>>::rectify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rms::Rms<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rms::Rms<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rms::Rms<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rms::Rms<F>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_window_frames\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rms::Rms<F>>::set_window_frames"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"window_frames\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rms::Rms<F>>::window_frames"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rms::Rms<F>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop_front\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rms::Rms<F>>::pop_front"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"push_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rms::Rms<F>>::push_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc_rms\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rms::Rms<F>>::calc_rms"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<EnvelopeDetector<F, M> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnvelopeDetector<F, M> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"calc_gain\"), disambiguator: 0 }]","has_unsafe":false,"name":"calc_gain"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rms\"), disambiguator: 0 }]","has_unsafe":true,"name":"<EnvelopeDetector<F, rms::Rms<F>>>::rms"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_window_frames\"), disambiguator: 0 }]","has_unsafe":true,"name":"<EnvelopeDetector<F, rms::Rms<F>>>::set_window_frames"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"peak\"), disambiguator: 0 }]","has_unsafe":true,"name":"<EnvelopeDetector<F, peak::Peak>>::peak"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<EnvelopeDetector<F, M>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_attack_frames\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnvelopeDetector<F, M>>::set_attack_frames"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_release_frames\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnvelopeDetector<F, M>>::set_release_frames"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<EnvelopeDetector<F, M>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next_avg\"), disambiguator: 0 }]","has_unsafe":true,"name":"<EnvelopeDetector<F, M>>::next_avg"}
