{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Zero>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Zero>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_str_radix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Num>::from_str_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::One>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Div>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Rem>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_i64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::ToPrimitive>::to_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_u64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::ToPrimitive>::to_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_i8\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::ToPrimitive>::to_i8"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_i16\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::ToPrimitive>::to_i16"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_i32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::ToPrimitive>::to_i32"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_u8\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::ToPrimitive>::to_u8"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_u16\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::ToPrimitive>::to_u16"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_u32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::ToPrimitive>::to_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::ToPrimitive>::to_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::ToPrimitive>::to_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::NumCast>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"nan\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::nan"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"infinity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::infinity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"neg_infinity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::neg_infinity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"neg_zero\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::neg_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"min_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::min_value"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"min_positive_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::min_positive_value"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"max_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::max_value"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_nan\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::is_nan"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_infinite\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::is_infinite"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_finite\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::is_finite"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::is_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"classify\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::classify"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"integer_decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::integer_decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"floor\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::floor"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ceil\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"round\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::round"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"trunc\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fract\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::fract"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::mul_add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"recip\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::recip"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"powi\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::powi"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"powf\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::powf"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"exp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::exp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"exp2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::exp2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ln\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::ln"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"log\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::log"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"log2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::log2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"log10\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::log10"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"signum\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::signum"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_sign_positive\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::is_sign_positive"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_sign_negative\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::is_sign_negative"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dual<T> as num::Float>::max"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"min\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dual<T> as num::Float>::min"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"abs_sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::abs_sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"cbrt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::cbrt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"hypot\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::hypot"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"sin\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::sin"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"cos\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::cos"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"tan\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::tan"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"asin\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::asin"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"acos\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::acos"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"atan\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::atan"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"atan2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::atan2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"sin_cos\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::sin_cos"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"exp_m1\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::exp_m1"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ln_1p\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::ln_1p"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"sinh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::sinh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"cosh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::cosh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"tanh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::tanh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"asinh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::asinh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"acosh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::acosh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"atanh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num::Float>::atanh"}
